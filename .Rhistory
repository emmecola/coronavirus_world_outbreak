colormap <- c("Ricoverati con sintomi" = "darkorange1",
"Terapia intensiva" = "firebrick2",
"Isolamento domiciliare" = "deepskyblue3",
"Dimessi guariti" = "#50C878",
"Deceduti" = "grey35")
ITALYPLOT <- ggplot(data=summary, mapping=aes(x=Data, y=Casi, fill=factor(Categoria, levels = c("Dimessi guariti","Isolamento domiciliare","Ricoverati con sintomi","Terapia intensiva","Deceduti")))) +
geom_bar(stat="identity") +
scale_fill_manual("", values = colormap) +
ggtitle(paste("SARS-COV-2 in Italia (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
scale_y_continuous(position="right") + labs(x="",y="") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank())
ggsave('plot_Italy.png',ITALYPLOT,dev="png",limitsize=TRUE, bg='transparent')
for (myregion in unique(summary$Regione))
{
if(myregion %in% c('Bolzano','Trento')) {
myregion_name = paste('nella Provincia Autonoma di ',myregion, sep="")} else if (myregion=="Marche") {
myregion_name = paste('nelle ',myregion,sep="")
} else {
myregion_name = paste('in ',myregion,sep="")
}
REGIONPLOT <- ggplot(data=summary[summary$Regione==myregion,], mapping=aes(x=Data, y=Casi, fill=factor(Categoria, levels = c("Dimessi guariti","Isolamento domiciliare","Ricoverati con sintomi","Terapia intensiva","Deceduti")))) +
geom_bar(stat="identity") +
scale_fill_manual("", values = colormap) +
ggtitle(paste("SARS-COV-2 ",myregion_name," (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
scale_y_continuous(position="right") + labs(x="",y="")
ggsave(paste("plot_",gsub(" ","_",myregion),".png",sep=""),REGIONPLOT,limitsize=TRUE, bg='transparent')
}
### REGION ANALYSIS
# INPUT FILE
summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv'
# LOAD DATA
summary <- read.csv(summary_file)
summary$data <- as.Date(summary$data)
summary$data <- as.Date(format(summary$data,format='%Y-%m-%d'))
today <- max(summary$data)
kept <- c("denominazione_regione","totale_casi","data")
summary <- summary[,kept]
summary <- melt(summary, id=c("denominazione_regione","data"))
colnames(summary) <- c("Regione","Data","Categoria","Casi")
Today_TOT <- sum(summary[summary$Data == today,'Casi'])
collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Regione']
summary_others <- summary[summary$Regione %in% collapse_these,]
summary_top <- summary[!(summary$Regione %in% collapse_these),]
summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Regione="Altre") %>% mutate(Categoria="totale_casi")
summary_full <- rbind(summary_top,summary_others)
level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Regione!="Altre"),'Regione']),summary_full[(summary_full$Data==today)&(summary_full$Regione!="Altre"),'Casi'],.desc=TRUE),"Altre")
REGION_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Regione,levels=levels(level_order)))) +
scale_fill_brewer("",palette = "Set1") +
scale_y_continuous(position="right") + labs(x="",y="") +
ggtitle(paste("SARS-COV-2 in Italia, casi per regione (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
geom_area()
ggsave('plot_Regions.png',REGION_CONTRIBUTION,dev="png",limitsize=TRUE, bg='transparent')
### PROVINCES ANALYSIS
# INPUT FILE
summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-province/dpc-covid19-ita-province.csv'
# LOAD DATA
summary_table <- read.csv(summary_file)
summary_table$data <- as.Date(summary_table$data)
summary_table$data <- as.Date(format(summary_table$data,format='%Y-%m-%d'))
today <- max(summary_table$data)
kept <- c("denominazione_provincia","totale_casi","data")
summary <- summary_table[,kept]
summary <- melt(summary, id=c("denominazione_provincia","data"))
colnames(summary) <- c("Provincia","Data","Categoria","Casi")
Today_TOT <- sum(summary[summary$Data == today,'Casi'])
collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Provincia']
summary_others <- summary[summary$Provincia %in% collapse_these,]
summary_top <- summary[!(summary$Provincia %in% collapse_these),]
summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Provincia="Altre") %>% mutate(Categoria="totale_casi")
summary_full <- rbind(summary_top,summary_others)
level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Provincia']),summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Casi'],.desc=TRUE),"Altre")
PROVINCE_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Provincia,levels=levels(level_order)))) +
scale_fill_brewer("",palette = "Paired") +
scale_y_continuous(position="right") + labs(x="",y="") +
ggtitle(paste("SARS-COV-2 in Italia, casi per provincia (agg.",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
geom_area()
ggsave('plot_Provinces.png',PROVINCE_CONTRIBUTION,dev="png", bg='transparent')
#
# for (myregion in unique(summary_table$denominazione_regione))
#
# {
#
#   summary = summary_table[summary_table$denominazione_regione == myregion,]
#
# kept <- c("denominazione_provincia","totale_casi","data")
# summary <- summary[,kept]
# summary <- melt(summary, id=c("denominazione_provincia","data"))
#
# colnames(summary) <- c("Provincia","Data","Categoria","Casi")
#
# Today_TOT <- sum(summary[summary$Data == today,'Casi'])
#
# print(Today_TOT)
#
# collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Provincia']
# print(myregion)
# print(collapse_these)
#
# summary_others <- summary[summary$Provincia %in% collapse_these,]
# summary_top <- summary[!(summary$Provincia %in% collapse_these),]
#
# summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Provincia="Altre") %>% mutate(Categoria="totale_casi")
# summary_full <- rbind(summary_top,summary_others)
#
# level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Provincia']),summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Casi'],.desc=TRUE),"Altre")
#
# PROVINCE_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Provincia,levels=levels(level_order)))) +
#   scale_fill_brewer("",palette = "Paired") +
#   scale_y_continuous(position="right") + labs(x="",y="") +
#   ggtitle(paste("SARS-COV-2 in ", myregion," (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
#   scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
#   theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
#   geom_area()
#
# ggsave(paste("plot_",str_replace(myregion," ","_"),"_byProvince.png",sep=""), PROVINCE_CONTRIBUTION,dev="png", bg='transparent')
#
# }
# LOAD LIBRARIES
library(dplyr)
library(ggplot2)
library(reshape2)
library(forcats)
# INPUT FILE
summary_file <- summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv'
# LOAD DATA
summary <- read.csv(summary_file)
edit(summary)
# CLEAN DATA
summary$data <- as.Date(summary$data)
summary$data <- as.Date(format(summary$data,format='%Y-%m-%d'))
today <- max(summary$data)
kept <- c("denominazione_regione","ricoverati_con_sintomi","terapia_intensiva",
"isolamento_domiciliare","dimessi_guariti","deceduti","data")
summary <- summary[,kept]
summary <- melt(summary, id=c("denominazione_regione","data"))
colnames(summary) <- c("Regione","Data","Categoria","Casi")
levels(summary$Categoria) <- c("Ricoverati con sintomi","Terapia intensiva","Isolamento domiciliare","Dimessi guariti", "Deceduti")
colormap <- c("Ricoverati con sintomi" = "darkorange1",
"Terapia intensiva" = "firebrick2",
"Isolamento domiciliare" = "deepskyblue3",
"Dimessi guariti" = "#50C878",
"Deceduti" = "grey35")
ITALYPLOT <- ggplot(data=summary, mapping=aes(x=Data, y=Casi, fill=factor(Categoria, levels = c("Dimessi guariti","Isolamento domiciliare","Ricoverati con sintomi","Terapia intensiva","Deceduti")))) +
geom_bar(stat="identity") +
scale_fill_manual("", values = colormap) +
ggtitle(paste("SARS-COV-2 in Italia (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
scale_y_continuous(position="right") + labs(x="",y="") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank())
ggsave('plot_Italy.png',ITALYPLOT,dev="png",limitsize=TRUE, bg='transparent')
for (myregion in unique(summary$Regione))
{
if(myregion %in% c('Bolzano','Trento')) {
myregion_name = paste('nella Provincia Autonoma di ',myregion, sep="")} else if (myregion=="Marche") {
myregion_name = paste('nelle ',myregion,sep="")
} else {
myregion_name = paste('in ',myregion,sep="")
}
REGIONPLOT <- ggplot(data=summary[summary$Regione==myregion,], mapping=aes(x=Data, y=Casi, fill=factor(Categoria, levels = c("Dimessi guariti","Isolamento domiciliare","Ricoverati con sintomi","Terapia intensiva","Deceduti")))) +
geom_bar(stat="identity") +
scale_fill_manual("", values = colormap) +
ggtitle(paste("SARS-COV-2 ",myregion_name," (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
scale_y_continuous(position="right") + labs(x="",y="")
ggsave(paste("plot_",gsub(" ","_",myregion),".png",sep=""),REGIONPLOT,limitsize=TRUE, bg='transparent')
}
# INPUT FILE
summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv'
# LOAD DATA
summary <- read.csv(summary_file)
edit(summary)
# INPUT FILE
summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv'
# LOAD DATA
summary <- read.csv(summary_file)
summary$data <- as.Date(summary$data)
summary$data <- as.Date(format(summary$data,format='%Y-%m-%d'))
today <- max(summary$data)
kept <- c("denominazione_regione","totale_casi","data")
summary <- summary[,kept]
summary <- melt(summary, id=c("denominazione_regione","data"))
colnames(summary) <- c("Regione","Data","Categoria","Casi")
Today_TOT <- sum(summary[summary$Data == today,'Casi'])
collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Regione']
summary_others <- summary[summary$Regione %in% collapse_these,]
summary_top <- summary[!(summary$Regione %in% collapse_these),]
summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Regione="Altre") %>% mutate(Categoria="totale_casi")
summary_full <- rbind(summary_top,summary_others)
level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Regione!="Altre"),'Regione']),summary_full[(summary_full$Data==today)&(summary_full$Regione!="Altre"),'Casi'],.desc=TRUE),"Altre")
REGION_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Regione,levels=levels(level_order)))) +
scale_fill_brewer("",palette = "Set1") +
scale_y_continuous(position="right") + labs(x="",y="") +
ggtitle(paste("SARS-COV-2 in Italia, casi per regione (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
geom_area()
ggsave('plot_Regions.png',REGION_CONTRIBUTION,dev="png",limitsize=TRUE, bg='transparent')
### PROVINCES ANALYSIS
# INPUT FILE
summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-province/dpc-covid19-ita-province.csv'
# LOAD DATA
summary_table <- read.csv(summary_file)
summary_table$data <- as.Date(summary_table$data)
summary_table$data <- as.Date(format(summary_table$data,format='%Y-%m-%d'))
today <- max(summary_table$data)
kept <- c("denominazione_provincia","totale_casi","data")
summary <- summary_table[,kept]
summary <- melt(summary, id=c("denominazione_provincia","data"))
colnames(summary) <- c("Provincia","Data","Categoria","Casi")
Today_TOT <- sum(summary[summary$Data == today,'Casi'])
collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Provincia']
summary_others <- summary[summary$Provincia %in% collapse_these,]
summary_top <- summary[!(summary$Provincia %in% collapse_these),]
summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Provincia="Altre") %>% mutate(Categoria="totale_casi")
summary_full <- rbind(summary_top,summary_others)
level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Provincia']),summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Casi'],.desc=TRUE),"Altre")
PROVINCE_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Provincia,levels=levels(level_order)))) +
scale_fill_brewer("",palette = "Paired") +
scale_y_continuous(position="right") + labs(x="",y="") +
ggtitle(paste("SARS-COV-2 in Italia, casi per provincia (agg.",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
geom_area()
ggsave('plot_Provinces.png',PROVINCE_CONTRIBUTION,dev="png", bg='transparent')
#
# for (myregion in unique(summary_table$denominazione_regione))
#
# {
#
#   summary = summary_table[summary_table$denominazione_regione == myregion,]
#
# kept <- c("denominazione_provincia","totale_casi","data")
# summary <- summary[,kept]
# summary <- melt(summary, id=c("denominazione_provincia","data"))
#
# colnames(summary) <- c("Provincia","Data","Categoria","Casi")
#
# Today_TOT <- sum(summary[summary$Data == today,'Casi'])
#
# print(Today_TOT)
#
# collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Provincia']
# print(myregion)
# print(collapse_these)
#
# summary_others <- summary[summary$Provincia %in% collapse_these,]
# summary_top <- summary[!(summary$Provincia %in% collapse_these),]
#
# summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Provincia="Altre") %>% mutate(Categoria="totale_casi")
# summary_full <- rbind(summary_top,summary_others)
#
# level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Provincia']),summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Casi'],.desc=TRUE),"Altre")
#
# PROVINCE_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Provincia,levels=levels(level_order)))) +
#   scale_fill_brewer("",palette = "Paired") +
#   scale_y_continuous(position="right") + labs(x="",y="") +
#   ggtitle(paste("SARS-COV-2 in ", myregion," (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
#   scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
#   theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
#   geom_area()
#
# ggsave(paste("plot_",str_replace(myregion," ","_"),"_byProvince.png",sep=""), PROVINCE_CONTRIBUTION,dev="png", bg='transparent')
#
# }
# LOAD LIBRARIES
library(dplyr)
library(ggplot2)
library(reshape2)
library(forcats)
# INPUT FILE
summary_file <- summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv'
# LOAD DATA
summary <- read.csv(summary_file)
edit(summary)
# CLEAN DATA
summary$data <- as.Date(summary$data)
summary$data <- as.Date(format(summary$data,format='%Y-%m-%d'))
today <- max(summary$data)
kept <- c("denominazione_regione","ricoverati_con_sintomi","terapia_intensiva",
"isolamento_domiciliare","dimessi_guariti","deceduti","data")
summary <- summary[,kept]
summary <- melt(summary, id=c("denominazione_regione","data"))
colnames(summary) <- c("Regione","Data","Categoria","Casi")
levels(summary$Categoria) <- c("Ricoverati con sintomi","Terapia intensiva","Isolamento domiciliare","Dimessi guariti", "Deceduti")
colormap <- c("Ricoverati con sintomi" = "darkorange1",
"Terapia intensiva" = "firebrick2",
"Isolamento domiciliare" = "deepskyblue3",
"Dimessi guariti" = "#50C878",
"Deceduti" = "grey35")
ITALYPLOT <- ggplot(data=summary, mapping=aes(x=Data, y=Casi, fill=factor(Categoria, levels = c("Dimessi guariti","Isolamento domiciliare","Ricoverati con sintomi","Terapia intensiva","Deceduti")))) +
geom_bar(stat="identity") +
scale_fill_manual("", values = colormap) +
ggtitle(paste("SARS-COV-2 in Italia (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
scale_y_continuous(position="right") + labs(x="",y="") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank())
ggsave('plot_Italy.png',ITALYPLOT,dev="png",limitsize=TRUE, bg='transparent')
for (myregion in unique(summary$Regione))
{
if(myregion %in% c('Bolzano','Trento')) {
myregion_name = paste('nella Provincia Autonoma di ',myregion, sep="")} else if (myregion=="Marche") {
myregion_name = paste('nelle ',myregion,sep="")
} else {
myregion_name = paste('in ',myregion,sep="")
}
REGIONPLOT <- ggplot(data=summary[summary$Regione==myregion,], mapping=aes(x=Data, y=Casi, fill=factor(Categoria, levels = c("Dimessi guariti","Isolamento domiciliare","Ricoverati con sintomi","Terapia intensiva","Deceduti")))) +
geom_bar(stat="identity") +
scale_fill_manual("", values = colormap) +
ggtitle(paste("SARS-COV-2 ",myregion_name," (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
scale_y_continuous(position="right") + labs(x="",y="")
ggsave(paste("plot_",gsub(" ","_",myregion),".png",sep=""),REGIONPLOT,limitsize=TRUE, bg='transparent')
}
### REGION ANALYSIS
### REGION ANALYSIS
# INPUT FILE
summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv'
# LOAD DATA
summary <- read.csv(summary_file)
edit(summary)
summary$data <- as.Date(summary$data)
summary$data <- as.Date(format(summary$data,format='%Y-%m-%d'))
today <- max(summary$data)
kept <- c("denominazione_regione","totale_casi","data")
summary <- summary[,kept]
summary <- melt(summary, id=c("denominazione_regione","data"))
colnames(summary) <- c("Regione","Data","Categoria","Casi")
Today_TOT <- sum(summary[summary$Data == today,'Casi'])
collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Regione']
summary_others <- summary[summary$Regione %in% collapse_these,]
summary_top <- summary[!(summary$Regione %in% collapse_these),]
summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Regione="Altre") %>% mutate(Categoria="totale_casi")
summary_full <- rbind(summary_top,summary_others)
level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Regione!="Altre"),'Regione']),summary_full[(summary_full$Data==today)&(summary_full$Regione!="Altre"),'Casi'],.desc=TRUE),"Altre")
REGION_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Regione,levels=levels(level_order)))) +
scale_fill_brewer("",palette = "Set1") +
scale_y_continuous(position="right") + labs(x="",y="") +
ggtitle(paste("SARS-COV-2 in Italia, casi per regione (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
geom_area()
ggsave('plot_Regions.png',REGION_CONTRIBUTION,dev="png",limitsize=TRUE, bg='transparent')
### PROVINCES ANALYSIS
# INPUT FILE
summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-province/dpc-covid19-ita-province.csv'
# LOAD DATA
summary_table <- read.csv(summary_file)
edit(summary_table)
summary_table$data <- as.Date(summary_table$data)
summary_table$data <- as.Date(format(summary_table$data,format='%Y-%m-%d'))
today <- max(summary_table$data)
kept <- c("denominazione_provincia","totale_casi","data")
summary <- summary_table[,kept]
summary <- melt(summary, id=c("denominazione_provincia","data"))
colnames(summary) <- c("Provincia","Data","Categoria","Casi")
Today_TOT <- sum(summary[summary$Data == today,'Casi'])
collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Provincia']
summary_others <- summary[summary$Provincia %in% collapse_these,]
summary_top <- summary[!(summary$Provincia %in% collapse_these),]
summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Provincia="Altre") %>% mutate(Categoria="totale_casi")
summary_full <- rbind(summary_top,summary_others)
level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Provincia']),summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Casi'],.desc=TRUE),"Altre")
PROVINCE_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Provincia,levels=levels(level_order)))) +
scale_fill_brewer("",palette = "Paired") +
scale_y_continuous(position="right") + labs(x="",y="") +
ggtitle(paste("SARS-COV-2 in Italia, casi per provincia (agg.",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
geom_area()
ggsave('plot_Provinces.png',PROVINCE_CONTRIBUTION,dev="png", bg='transparent')
#
# for (myregion in unique(summary_table$denominazione_regione))
#
# {
#
#   summary = summary_table[summary_table$denominazione_regione == myregion,]
#
# kept <- c("denominazione_provincia","totale_casi","data")
# summary <- summary[,kept]
# summary <- melt(summary, id=c("denominazione_provincia","data"))
#
# colnames(summary) <- c("Provincia","Data","Categoria","Casi")
#
# Today_TOT <- sum(summary[summary$Data == today,'Casi'])
#
# print(Today_TOT)
#
# collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Provincia']
# print(myregion)
# print(collapse_these)
#
# summary_others <- summary[summary$Provincia %in% collapse_these,]
# summary_top <- summary[!(summary$Provincia %in% collapse_these),]
#
# summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Provincia="Altre") %>% mutate(Categoria="totale_casi")
# summary_full <- rbind(summary_top,summary_others)
#
# level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Provincia']),summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Casi'],.desc=TRUE),"Altre")
#
# PROVINCE_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Provincia,levels=levels(level_order)))) +
#   scale_fill_brewer("",palette = "Paired") +
#   scale_y_continuous(position="right") + labs(x="",y="") +
#   ggtitle(paste("SARS-COV-2 in ", myregion," (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
#   scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
#   theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
#   geom_area()
#
# ggsave(paste("plot_",str_replace(myregion," ","_"),"_byProvince.png",sep=""), PROVINCE_CONTRIBUTION,dev="png", bg='transparent')
#
# }
# INSTALL UPDATED PACKAGE
devtools::install_github("RamiKrispin/coronavirus")
# SET WORKING DIRECTORY
setwd("~/GIT_folder/coronavirus_world_outbreak")
# LOAD LIBRARIES
library(coronavirus)
library(dplyr)
library(ggplot2)
library(stringr)
library(showtext)
# ACTIVATE SHOWTEXT
showtext_auto()
x11()
# LOAD FONT
font_add(family='Roboto', regular='C:/Users/asus/Downloads/Roboto/Roboto-Light.ttf')
#font_add(family='Sen', regular='C:/Users/colaiacovo.moreno/Downloads/Sen/Sen-Regular.ttf')
# LOAD DATA
data("coronavirus")
# PLOT FUNCTION
plotCases <- function(dataframe,COUNTRY,COUNTRY_INFECTED)
{
filtered_covid <- coronavirus %>% filter(Country.Region==COUNTRY)
df <- data.frame(date=character(), cases=character(),
type=as.factor(character()),stringsAsFactors=TRUE)
start <- min(filtered_covid$date)
end <- max(filtered_covid$date)
theDate <- start
temp_country = gsub("\\*","",COUNTRY)
temp_country = gsub("'","",temp_country)
temp_country = gsub("\\(","",temp_country)
temp_country = gsub("\\)","",temp_country)
temp_country = gsub(" ","_",temp_country)
while (theDate <= end)
{
filtered_cum <- filtered_covid %>% filter(date<=theDate)
d <- sum((filtered_cum %>% filter(type=="death"))$cases) # sum deaths
r <- sum((filtered_cum %>% filter(type=="recovered"))$cases) # sum recovered
c <- sum((filtered_cum %>% filter(type=="confirmed"))$cases) # sum confirmed
i <- c - d - r # calculate currently infected
df_temp <- data.frame(date=theDate,cases=c(i,d,r),
type=c("currently infected","dead","recovered"),
stringsAsFactors=FALSE)
df <- rbind(df,df_temp)
theDate <- theDate + 1
}
COUNTRY_INFECTED[[temp_country]] = sum(df[df$date==end,'cases'])
colormap <- c("currently infected" = "darkorange1",
"recovered" = "deepskyblue3",
#"recovered" = "#50C878",
"dead" = "grey35")
p <-ggplot(data=df, mapping=aes(x=date, y=cases, fill=factor(type, levels = c("recovered","currently infected","dead")))) +
geom_bar(stat="identity") +
scale_fill_manual("", values = colormap) +
ggtitle(paste("COVID-19 in ",COUNTRY," (last update: ",format(end,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m") +
scale_y_continuous(position="right") + labs(x="",y="") +
theme_classic() +
theme(legend.position="bottom",
legend.background = element_rect(color = NA),
panel.grid.major = element_line(colour = 'grey',size=0.3),
panel.grid.minor = element_blank(),
panel.grid.major.x=element_blank(),
plot.margin=unit(c(1,0,1,0.5),"cm"),
legend.text=element_text(size=45,family='Roboto'),
plot.title = element_text(size=65, family='Roboto'),
axis.text.x = element_text(size=40,family='Roboto'),
axis.text.y = element_text(size=40,family='Roboto'))
file_name = paste("img/plot_",temp_country,".png",sep="")
ggsave(file_name, p, device='png', limitsize = TRUE, width = 11, height = 8, units='in', bg='transparent')
return(COUNTRY_INFECTED)
}
# WRITE README HEADER
s1='<div align="center"><h1>Coronavirus outbreak across the world</h1></div>'
s2='<div>This page is a collection of histogram plots tracking the SARS-COV-2 outbreak worldwide (one plot for each country). However, please be careful when directly comparing two plots!'
s3='First of all, each country might use different criteria to identify cases. Second, population age distribution might differ in different countries, and since the virus is more lethal in older people, death rate may appear higher in countries with older populations.</div>'
s4='<hr>'
write(c(s1,s2,s3,s4),file="README.md", append=FALSE)
# PLOT ALL COUNTRIES
COUNTRY_INFECTED <- list()
for (C in unique(coronavirus$Country.Region))
{COUNTRY_INFECTED <- plotCases(coronavirus,C,COUNTRY_INFECTED)}
# FILL README
for (COUNTRY in names(COUNTRY_INFECTED[order(unlist(COUNTRY_INFECTED),decreasing=TRUE)]))
{
x=paste('<div align="center"><img src="img/plot_',gsub(" ","_",gsub("\\*","",COUNTRY)),'.png?raw=true" width="100%"/></div>',sep="")
write(x,file="README.md", append=TRUE)
}
# FINAL TEXT
s5="<hr>"
s6="These plots were created using data from the <a href='https://github.com/RamiKrispin/coronavirus' target='_blank'>coronavirus</a> R package, which is updated daily and maintained by Rami Krispin."
write(c(s5,s6),file="README.md", append=TRUE)
# TURN OFF SHOWTEXT
showtext_auto(FALSE)
